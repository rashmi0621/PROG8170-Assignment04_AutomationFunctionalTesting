// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using NUnit.Framework;
[TestFixture]
public class InsuranceTestsTest
{
    private IWebDriver driver;
    public IDictionary<string, object> vars { get; private set; }
    private IJavaScriptExecutor js;
    [SetUp]
    public void SetUp()
    {
        driver = new ChromeDriver();
        js = (IJavaScriptExecutor)driver;
        vars = new Dictionary<string, object>();
    }
    [TearDown]
    protected void TearDown()
    {
        driver.Quit();
    }
    string baseURL = "http://localhost/prog8170a04/getQuote.html/";

    [Test]
    public void InsuranceRate_Input23And3And0_InsuranceQuote()
    {

        // Arrange
        driver.Navigate().GoToUrl(baseURL);
        driver.Manage().Window.Size = new System.Drawing.Size(1552, 832);

        // Act
        driver.FindElement(By.Id("firstName")).Click();
        driver.FindElement(By.Id("firstName")).SendKeys("Rashmi");
        driver.FindElement(By.Id("lastName")).SendKeys("Anchan");
        driver.FindElement(By.Id("address")).SendKeys("132 Oark Street");
        driver.FindElement(By.Id("city")).SendKeys("Waterloo");
        driver.FindElement(By.Id("postalCode")).SendKeys("N2l 3L2");
        driver.FindElement(By.Id("phone")).Click();
        driver.FindElement(By.Id("phone")).SendKeys("416-272-8923");
        driver.FindElement(By.Id("email")).SendKeys("rashmi.anchan06@gmail.com");
        driver.FindElement(By.Id("age")).SendKeys("25");
        driver.FindElement(By.Id("experience")).SendKeys("3");
        driver.FindElement(By.Id("accidents")).SendKeys("0");
        driver.FindElement(By.Id("btnSubmit")).Click();

        // Assert
        {
            string value = driver.FindElement(By.Id("finalQuote")).GetAttribute("value");
            Assert.That(value, Is.EqualTo("$2500"));
        }
    }
    [Test]
    public void DrivingExperience_Input45And9And0_InsuranceQuote()
    {

        // Arrange
        driver.Navigate().GoToUrl(baseURL);
        driver.Manage().Window.Size = new System.Drawing.Size(1552, 832);

        // Act
        driver.FindElement(By.Id("firstName")).Click();
        driver.FindElement(By.Id("firstName")).SendKeys("Simran");
        driver.FindElement(By.Id("lastName")).SendKeys("Arora");
        driver.FindElement(By.Id("address")).SendKeys("76 Lester Street");
        driver.FindElement(By.Id("city")).SendKeys("Toronto");
        driver.FindElement(By.Id("postalCode")).SendKeys("M2L 4V2");
        driver.FindElement(By.Id("phone")).SendKeys("564-784-7845");
        driver.FindElement(By.Id("email")).SendKeys("simran@gmail.com");
        driver.FindElement(By.Id("age")).Click();
        driver.FindElement(By.Id("age")).SendKeys("45");
        driver.FindElement(By.Id("accidents")).Click();
        driver.FindElement(By.Id("accidents")).SendKeys("0");
        driver.FindElement(By.Id("btnSubmit")).Click();
        {
            var element = driver.FindElement(By.Id("btnSubmit"));
            Actions builder = new Actions(driver);
            builder.MoveToElement(element).Perform();
        }
        {
            var element = driver.FindElement(By.TagName("body"));
            Actions builder = new Actions(driver);
            builder.MoveToElement(element, 0, 0).Perform();
        }

        // Assert
        Assert.That(driver.FindElement(By.Id("experience-error")).Text, Is.EqualTo("Years of experience is required"));
    }
    [Test]
    public void FaultAccidents_Input37And8And0_InsuranceQuote()
    {

        // Arrange
        driver.Navigate().GoToUrl(baseURL);
        driver.Manage().Window.Size = new System.Drawing.Size(1552, 832);

        // Act
        driver.FindElement(By.Id("firstName")).Click();
        driver.FindElement(By.Id("firstName")).SendKeys("Clarke");
        driver.FindElement(By.Id("lastName")).SendKeys("Windsor");
        driver.FindElement(By.Id("address")).SendKeys("156 Albert Street");
        driver.FindElement(By.Id("city")).SendKeys("Waterloo");
        driver.FindElement(By.Id("postalCode")).SendKeys("N4L 3H4");
        driver.FindElement(By.Id("phone")).SendKeys("451-784-7894");
        driver.FindElement(By.Id("email")).SendKeys("Clarke");
        driver.FindElement(By.Id("age")).Click();
        driver.FindElement(By.Id("age")).SendKeys("37");
        driver.FindElement(By.Id("experience")).Click();
        driver.FindElement(By.Id("experience")).SendKeys("8");
        driver.FindElement(By.Id("btnSubmit")).Click();
        {
            var element = driver.FindElement(By.Id("btnSubmit"));
            Actions builder = new Actions(driver);
            builder.MoveToElement(element).Perform();
        }
        {
            var element = driver.FindElement(By.TagName("body"));
            Actions builder = new Actions(driver);
            builder.MoveToElement(element, 0, 0).Perform();
        }
        driver.FindElement(By.Id("email")).Click();
        driver.FindElement(By.Id("email")).SendKeys("Clarke@gmail.com");
        driver.FindElement(By.Id("btnSubmit")).Click();

        // Assert
        Assert.That(driver.FindElement(By.Id("accidents-error")).Text, Is.EqualTo("Number of accidents is required"));
    }
    [Test]
    public void FirstName_Input23And3And0_InsuranceQuote()
    {

        // Arrange
        driver.Navigate().GoToUrl(baseURL);
        driver.Manage().Window.Size = new System.Drawing.Size(1552, 832);

        // Act
        driver.FindElement(By.Id("lastName")).Click();
        driver.FindElement(By.Id("lastName")).SendKeys("Rana");
        driver.FindElement(By.Id("address")).SendKeys("123 park street");
        driver.FindElement(By.Id("city")).SendKeys("Alberta");
        driver.FindElement(By.Id("postalCode")).SendKeys("N3L 4L2");
        driver.FindElement(By.Id("phone")).SendKeys("516-541-4589");
        driver.FindElement(By.Id("email")).SendKeys("samar@gmail.com");
        driver.FindElement(By.Id("age")).SendKeys("25");
        driver.FindElement(By.Id("experience")).SendKeys("3");
        driver.FindElement(By.Id("accidents")).SendKeys("0");
        driver.FindElement(By.Id("btnSubmit")).Click();
        {
            var element = driver.FindElement(By.Id("btnSubmit"));
            Actions builder = new Actions(driver);
            builder.MoveToElement(element).Perform();
        }
        {
            var element = driver.FindElement(By.TagName("body"));
            Actions builder = new Actions(driver);
            builder.MoveToElement(element, 0, 0).Perform();
        }

        // Assert
        Assert.That(driver.FindElement(By.Id("firstName-error")).Text, Is.EqualTo("First Name is required"));
    }
    [Test]
    public void InvalidEmail_Input28And3And0_InsuranceQuote()
    {

        // Arrange
        driver.Navigate().GoToUrl(baseURL);
        driver.Manage().Window.Size = new System.Drawing.Size(1552, 832);

        // Act
        driver.FindElement(By.Id("firstName")).Click();
        driver.FindElement(By.Id("firstName")).SendKeys("Ashwin");
        driver.FindElement(By.Id("lastName")).SendKeys("Roy");
        driver.FindElement(By.Id("address")).SendKeys("789 Rutu Enclave");
        driver.FindElement(By.Id("city")).SendKeys("Mumbai");
        driver.FindElement(By.Id("city")).Click();
        driver.FindElement(By.Id("city")).Click();
        {
            var element = driver.FindElement(By.Id("city"));
            Actions builder = new Actions(driver);
            builder.DoubleClick(element).Perform();
        }
        driver.FindElement(By.Id("city")).SendKeys("Alberta");
        driver.FindElement(By.Id("province")).Click();
        {
            var dropdown = driver.FindElement(By.Id("province"));
            dropdown.FindElement(By.XPath("//option[. = 'MB']")).Click();
        }
        driver.FindElement(By.Id("postalCode")).Click();
        driver.FindElement(By.Id("postalCode")).SendKeys("N2L 3L2");
        driver.FindElement(By.Id("phone")).SendKeys("4162728923");
        driver.FindElement(By.Id("email")).SendKeys("rashmi.anchan06@gmail.com");
        driver.FindElement(By.Id("email")).Click();
        driver.FindElement(By.Id("email")).Click();
        driver.FindElement(By.Id("email")).SendKeys("testtes.com");
        driver.FindElement(By.Id("phone")).Click();
        driver.FindElement(By.Id("phone")).Click();
        driver.FindElement(By.Id("phone")).SendKeys("416-272-8923");
        driver.FindElement(By.Id("age")).Click();
        driver.FindElement(By.Id("age")).SendKeys("28");
        driver.FindElement(By.Id("experience")).SendKeys("3");
        driver.FindElement(By.Id("accidents")).SendKeys("0");
        driver.FindElement(By.Id("btnSubmit")).Click();
        {
            var element = driver.FindElement(By.Id("btnSubmit"));
            Actions builder = new Actions(driver);
            builder.MoveToElement(element).Perform();
        }
        {
            var element = driver.FindElement(By.TagName("body"));
            Actions builder = new Actions(driver);
            builder.MoveToElement(element, 0, 0).Perform();
        }

        // Assert
        Assert.That(driver.FindElement(By.Id("email-error")).Text, Is.EqualTo("Must be a valid email address"));
    }
    [Test]
    public void InvalidPhone_Input27And3And0_InsuranceQuote()
    {

        // Arrange
        driver.Navigate().GoToUrl(baseURL);
        driver.Manage().Window.Size = new System.Drawing.Size(1552, 832);

        // Act
        driver.FindElement(By.Id("firstName")).Click();
        driver.FindElement(By.Id("firstName")).SendKeys("Molly");
        driver.FindElement(By.Id("lastName")).SendKeys("Blossom");
        driver.FindElement(By.Id("address")).SendKeys("56 King street North");
        driver.FindElement(By.Id("city")).SendKeys("Manitoba");
        driver.FindElement(By.Id("postalCode")).SendKeys("B2B 1B2");
        driver.FindElement(By.Id("phone")).SendKeys("4521452147");
        driver.FindElement(By.Id("email")).SendKeys("molly@gmail.com");
        driver.FindElement(By.Id("age")).SendKeys("27");
        driver.FindElement(By.Id("experience")).SendKeys("3");
        driver.FindElement(By.Id("accidents")).SendKeys("0");
        driver.FindElement(By.Id("btnSubmit")).Click();

        // Assert
        Assert.That(driver.FindElement(By.Id("phone-error")).Text, Is.EqualTo("Phone Number must follow the patterns 111-111-1111 or (111)111-1111"));
    }
    [Test]
    public void InvalidPostalCode_Input35And17And1_InsuranceQuote()
    {

        // Arrange
        driver.Navigate().GoToUrl(baseURL);
        driver.Manage().Window.Size = new System.Drawing.Size(1552, 832);

        // Act
        driver.FindElement(By.Id("firstName")).Click();
        driver.FindElement(By.Id("firstName")).SendKeys("Rick");
        driver.FindElement(By.Id("lastName")).SendKeys("Guzik");
        driver.FindElement(By.Id("address")).SendKeys("123 Toronto Blossom");
        driver.FindElement(By.Id("city")).SendKeys("Toronto");
        driver.FindElement(By.Id("postalCode")).SendKeys("3L3C3N");
        driver.FindElement(By.Id("phone")).SendKeys("123-123-7854");
        driver.FindElement(By.Id("email")).SendKeys("rick@gmail.com");
        driver.FindElement(By.Id("age")).SendKeys("37");
        driver.FindElement(By.Id("experience")).SendKeys("17");
        driver.FindElement(By.Id("accidents")).SendKeys("1");
        driver.FindElement(By.Id("btnSubmit")).Click();
        {
            var element = driver.FindElement(By.Id("btnSubmit"));
            Actions builder = new Actions(driver);
            builder.MoveToElement(element).Perform();
        }
        {
            var element = driver.FindElement(By.TagName("body"));
            Actions builder = new Actions(driver);
            builder.MoveToElement(element, 0, 0).Perform();
        }

        // Assert
        Assert.That(driver.FindElement(By.Id("postalCode-error")).Text, Is.EqualTo("Postal Code must follow the pattern A1A 1A1"));
    }
    [Test]
    public void LastName_Input26And3And0_InsuranceQuote()
    {

        // Arrange
        driver.Navigate().GoToUrl(baseURL);
        driver.Manage().Window.Size = new System.Drawing.Size(1552, 832);

        // Act
        driver.FindElement(By.Id("firstName")).Click();
        driver.FindElement(By.Id("firstName")).SendKeys("Annie");
        driver.FindElement(By.Id("address")).SendKeys("987 Columbia South");
        driver.FindElement(By.Id("city")).SendKeys("Waterloo");
        driver.FindElement(By.Id("postalCode")).SendKeys("L2O 302");
        driver.FindElement(By.Id("phone")).Click();
        driver.FindElement(By.Id("phone")).SendKeys("125-785-8745");
        driver.FindElement(By.Id("email")).SendKeys("anniegmail.com");
        driver.FindElement(By.Id("age")).SendKeys("26");
        driver.FindElement(By.Id("experience")).SendKeys("3");
        driver.FindElement(By.Id("accidents")).SendKeys("0");
        driver.FindElement(By.Id("btnSubmit")).Click();
        {
            var element = driver.FindElement(By.Id("btnSubmit"));
            Actions builder = new Actions(driver);
            builder.MoveToElement(element).Perform();
        }
        {
            var element = driver.FindElement(By.TagName("body"));
            Actions builder = new Actions(driver);
            builder.MoveToElement(element, 0, 0).Perform();
        }
        driver.FindElement(By.Id("email")).Click();
        driver.FindElement(By.Id("email")).SendKeys("annie@gmail.com");
        driver.FindElement(By.CssSelector(".form-row:nth-child(4)")).Click();
        driver.FindElement(By.Id("postalCode")).SendKeys("A1A 2B2");
        driver.FindElement(By.Id("btnSubmit")).Click();

        // Assert
        Assert.That(driver.FindElement(By.Id("lastName-error")).Text, Is.EqualTo("Last Name is required"));
    }

  
}

